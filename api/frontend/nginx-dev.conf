user nginx;
worker_processes 1;
pid /var/run/nginx.pid;
daemon off;

events {
  worker_connections 512;
  # multi_accept on;
}

http {
  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;
  proxy_connect_timeout 300;
  proxy_send_timeout 300;
  proxy_read_timeout 90m;
  send_timeout 300;
  keepalive_timeout 65;
  types_hash_max_size 2048;

  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  log_format upstream_time '$remote_addr - $remote_user [$time_local] '
                             '"$request" $status $body_bytes_sent '
                             '"$http_referer" "$http_user_agent"'
                             'rt=$request_time uct="$upstream_connect_time" uht="$upstream_header_time" urt="$upstream_response_time"';

  access_log /var/log/nginx/access.log upstream_time;
  error_log /var/log/nginx/error.log warn;

  server {
    listen 80;
    client_header_buffer_size 64k;
    large_client_header_buffers 4 64k;
    server_name _;
    root /var/www/;

    gzip on;
    gzip_types application/json;
    proxy_http_version 1.1;

    location /stats/nginx {
      stub_status on;
    }

    # Node side (these should only be used if the frontend is on the same machine as the connector)
    location / {
      proxy_pass http://fim_node_connector:6000/;
      proxy_set_header Host            $host;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /socket.io {
      proxy_http_version 1.1;
      proxy_buffering off;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "Upgrade";
      proxy_pass http://fim_node_connector:6000/socket.io;
      proxy_set_header Host            $host;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Frontend Side
    location /api {
      proxy_pass http://fim_frontend_gui:5000/;
      proxy_set_header Host            $host;
      proxy_set_header X-Forwarded-Proto $scheme;
    }
  }
}
